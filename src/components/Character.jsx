/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useEffect, useRef } from "react";
import { useAnimations, useGLTF } from "@react-three/drei";
import useInput from "./useInput";

export default function Character(props) {
   const { forward, backward, left, right, jump } = useInput();
   const group = useRef();
   const { nodes, materials, animations } = useGLTF("./models/male/model.gltf");
   const { actions } = useAnimations(animations, group);
   // console.log(actions);

   const currentAction = useRef("");

   // useEffect(() => {
   //    const getActionName = () => {
   //       if (jump) return "JumpAnimation";
   //       if (forward || backward || left || right) return "RunningAnimation";
   //       return "IdleAnimation";
   //    };

   //    const newActionName = getActionName();

   //    if (newActionName !== currentAction.current) {
   //       const current = actions[currentAction.current];
   //       const next = actions[newActionName];

   //       if (current) current.fadeOut(0.2);
   //       if (next) next.reset().fadeIn(0.2).play();

   //       currentAction.current = newActionName;
   //    }
   // }, [forward, backward, left, right, jump]);

   useEffect(() => {
      let action = "";
      if (jump) {
         action = "JumpAnimation";
      } else if (forward || backward || left || right) {
         action = "RunningAnimation";
      } else {
         action = "IdleAnimation";
      }
      if (currentAction.current != action) {
         const nextActionToPlay = actions[action];
         const current = actions[currentAction.current];
         if (
            action === "JumpAnimation" &&
            currentAction.current === "RunningAnimation"
         ) {
            // Fade out the running animation quickly
            current?.fadeOut(0.1);
            // Play the jump animation immediately with a slight delay
            nextActionToPlay?.reset().fadeIn(0.1).play(); // Adjust duration as needed
         } else {
            // For other transitions, fade out and play normally
            current?.fadeOut(0.2);
            nextActionToPlay?.reset().fadeIn(0.2).play();
         }

         currentAction.current = action;
      }

      // console.log(action);
      // actions?.RunningAnimation?.play();
      // console.log("forward", forward);
      // console.log("backward", backward);
      // console.log("left", left);
      // console.log("right", right);
      // console.log("jump", jump);
      // actions.RunningAnimation.play();
      //idle
      if (!jump && currentAction.current === "JumpAnimation") {
         const current = actions[currentAction.current];

         // Continue playing the jump animation
         current?.fadeIn(0.2).play();
      }
   }, [forward, backward, left, right, jump]);

   return (
      <group ref={group} {...props} dispose={null}>
         <group name="Scene">
            <group name="myChar">
               <primitive object={nodes.LeftFootCtrl} />
               <primitive object={nodes.RightFootCtrl} />
               <primitive object={nodes.HipsCtrl} />
               <skinnedMesh
                  name="characterMedium"
                  geometry={nodes.characterMedium.geometry}
                  material={materials["skin.001"]}
                  skeleton={nodes.characterMedium.skeleton}
               />
            </group>
         </group>
      </group>
   );
}

useGLTF.preload("./models/male/model.gltf");
